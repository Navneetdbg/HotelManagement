@model HotelManegementSystem.Areas.DashBoard.ViewModel.AccomodationModels


@if (Model != null)
{
    var trueChecked = Model.IsAvailable ? "checked" : string.Empty;
    var falseChecked = !Model.IsAvailable ? "checked" : string.Empty;

    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title" id="exampleModalLabel">
                @if (Model.Id > 0)
                {<span>Edit Accomodation</span> }
                else
                { <span>Add Accomodation </span>}
            </h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="modal-body">
            <form id="MyForm" method="post">
                <input type="hidden" name="Id" value="@Model.Id" />
                <div class="form-group">
                    <label for="exampleInputEmail1">Accomodation Packages</label>
                    <select class="form-control" name="AccomodationPackageId">
                        @if (Model.AccomodationPackages != null)
                        {
                            foreach (var item in Model.AccomodationPackages)
                            {
                                <option value="@item.Id" @(item.Id == Model.AccomodationPackageId ? "Selected" : string.Empty)>@item.Name</option>
                            }
                        }
                    </select>
                </div>
                <div class="form-group">
                    <label for="exampleInputEmail1">Name</label>
                    <input type="text" class="form-control" name="Name" id="Name" placeholder="Enter Name" value="@Model.Name">
                </div>
                <div class="form-group">
                    <label>Room Available</label>
                    <br />
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="IsAvailable" id="IsAvailable" value="true" @trueChecked>
                        <label class="form-check-label" for="inlineRadio1">Available</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="IsAvailable" id="IsAvailable" value="false" @falseChecked>
                        <label class="form-check-label" for="inlineRadio2">Not Available</label>
                    </div>

                </div>
                <div class="form-group">
                    <label for="exampleInputPassword1">Description</label>
                    <textarea type="text" class="form-control" id="Description" name="Description" placeholder="Description">@Model.Description</textarea>
                </div>

                <div class="form-group">
                    <label for="exampleInputPassword1">Image</label>
                    <input type="file" class="form-control" id="Image" name="Image" multiple>
                    <input type="hidden" id="PicTureIds" name="PicTureIds" />
                </div>
                <div id="ImageArea">
                    @if (Model.AccomodationImages != null && Model.AccomodationImages.Count > 0)
                    {
                        foreach (var item in Model.AccomodationImages)
                        {
                            <img src="/Content/images/Site/@item.Image.Url" data-id="@item.Image.Id" class="img-fluid" style="width:215px" onclick="Remove(this)" />
                        }
                    }
                </div>
            </form>
            <div class="errorDiv">

            </div>
        </div>
        <div class="modal-footer">
            <button type="button" id="actionButton" class="btn btn-primary">Save changes</button>
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>

        </div>
    </div>
}
<div id="imageTemplate">
    <img src="" data-id="" class="img-fluid" style="width:215px" onclick="Remove(this)" />
</div>
<script>
    $("#actionButton").click(function () {
        var PictureIds = [];
        $("#ImageArea img").each(function () {
            var PicId = $(this).attr("data-id");

            PictureIds.push(PicId);
        });
        $("#PicTureIds").val(PictureIds.join());
        $.ajax({
            url: '@Url.Action("Action", "Accomodation")',
            method: 'POST',

            data: $("#MyForm").serialize()
        }).done(function (response) {
            if (response.Success) {
                location.reload();
            } else {
                $(".errorDiv").html(response.Message);
            }
        });
    });
     $("#Image").change(function () {

        var images = this.files;
        var formData = new FormData();
        for (var i = 0; i < images.length; i++) {
            formData.append("image", images[i]);
        }
        $.ajax({
            url: '@Url.Action("Images", "DashBoard")',
            method: 'POST',
            data: formData,
            processData: false,
            contentType: false
        }).done(function (response) {

            for (var i = 0; i < response.length; i++) {
                var pic = response[i];
                var $imageHtml = $("#imageTemplate").clone();
                $imageHtml.find("img").attr("src", "/Content/images/Site/" + pic.Url);
                debugger;
                $imageHtml.find("img").attr("data-id",  pic.Id);
                $("#ImageArea").append($imageHtml.html());

            }

        });
    });

    function Remove(element) {
        element.remove();
    }
</script>

